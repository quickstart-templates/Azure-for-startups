{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.10.61.36676",
      "templateHash": "705928423806677872"
    }
  },
  "parameters": {
    "workloadName": {
      "type": "string",
      "metadata": {
        "description": "リソース名に付与する識別用の文字列（プロジェクト名など）を入力してください"
      }
    },
    "appServicePlanSkuCode": {
      "type": "string",
      "defaultValue": "P1v2",
      "allowedValues": [
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1v2",
        "P2v2",
        "P3v2",
        "P1v3",
        "P2v3",
        "P3v3"
      ],
      "metadata": {
        "description": "Azure App Service Plan のプランを選択してください"
      }
    },
    "storageAccountSkuCode": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GRS",
        "Standard_GZRS",
        "Standard_LRS",
        "Standard_RAGRS",
        "Standard_RAGZRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "Azure Storage Account の SKU を選択してください"
      }
    },
    "cosmosDbLocation": {
      "type": "string",
      "defaultValue": "Korea Central",
      "allowedValues": [
        "Brazil Southeast",
        "Central US",
        "Australia Southeast",
        "Canada Central",
        "Central India",
        "Southeast Asia",
        "Switzerland North",
        "UAE North",
        "East Asia",
        "UK West",
        "Switzerland West",
        "West Europe",
        "East US 2",
        "West US",
        "East US",
        "West US 3",
        "Australia East",
        "Brazil South",
        "Germany West Central",
        "France Central",
        "Japan East",
        "Japan West",
        "Korea South",
        "Germany North",
        "France South",
        "Australia Central",
        "South Central US",
        "South Africa North",
        "Korea Central",
        "South India",
        "Norway East",
        "Canada East",
        "North Central US",
        "Norway West",
        "North Europe",
        "South Africa West",
        "Australia Central 2",
        "UAE Central",
        "UK South",
        "West Central US",
        "West India",
        "West US 2",
        "Jio India West",
        "Jio India Central",
        "Sweden Central",
        "Sweden South",
        "Qatar Central"
      ],
      "metadata": {
        "description": "Azure Cosmos DB のロケーションを選択してください（状況によって利用できないリージョンがあります）"
      }
    },
    "cosmosDbEnableFreeTier": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Azure Cosmos DB の無料利用枠を利用するか否かを選択してください"
      }
    },
    "postgreSqlServerAdminLoginUserName": {
      "type": "string",
      "metadata": {
        "description": "Azure Database for PostgreSQL の管理者ユーザー名を入力してください"
      }
    },
    "postgreSqlServerAdminLoginPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Azure Database for PostgreSQL の管理者パスワードを入力してください"
      }
    }
  },
  "variables": {
    "resourceGroupLocation": "[resourceGroup().location]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-01-01",
      "name": "[format('{0}/{1}', format('vnet-{0}', parameters('workloadName')), 'frontend')]",
      "properties": {
        "addressPrefix": "10.0.0.0/24",
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('workloadName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-01-01",
      "name": "[format('{0}/{1}', format('vnet-{0}', parameters('workloadName')), 'outbound-webapp')]",
      "properties": {
        "addressPrefix": "10.0.1.0/24",
        "delegations": [
          {
            "name": "delegation",
            "properties": {
              "serviceName": "Microsoft.Web/serverFarms"
            }
          }
        ],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'frontend')]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('workloadName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-01-01",
      "name": "[format('{0}/{1}', format('vnet-{0}', parameters('workloadName')), 'backend')]",
      "properties": {
        "addressPrefix": "10.0.2.0/24",
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'outbound-webapp')]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('workloadName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', format('privatelink.blob.{0}', environment().suffixes.storage), format('link-{0}', format('st{0}', join(split(parameters('workloadName'), '-'), ''))))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('workloadName')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.blob.{0}', environment().suffixes.storage))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', join(split(parameters('workloadName'), '-'), '')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('workloadName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', 'privatelink.documents.azure.com', format('link-{0}', format('cosmos-{0}', parameters('workloadName'))))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('workloadName')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', format('cosmos-{0}', parameters('workloadName')))]",
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.documents.azure.com')]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('workloadName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', 'privatelink.postgres.database.azure.com', format('link-{0}', format('psql-{0}', parameters('workloadName'))))]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('workloadName')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/servers', format('psql-{0}', parameters('workloadName')))]",
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.postgres.database.azure.com')]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('workloadName')))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/virtualNetworkConnections",
      "apiVersion": "2022-03-01",
      "name": "[format('{0}/{1}', format('app-{0}', parameters('workloadName')), 'vnet-connection')]",
      "properties": {
        "vnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'outbound-webapp')]",
        "isSwift": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'outbound-webapp')]",
        "[resourceId('Microsoft.Web/sites', format('app-{0}', parameters('workloadName')))]"
      ]
    },
    {
      "type": "Microsoft.Cdn/profiles/afdEndpoints/routes",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}/{2}', format('fd-{0}', parameters('workloadName')), format('cdne-{0}', parameters('workloadName')), 'app')]",
      "properties": {
        "originGroup": {
          "id": "[resourceId('Microsoft.Cdn/profiles/originGroups', format('fd-{0}', parameters('workloadName')), 'default')]"
        },
        "supportedProtocols": [
          "Http",
          "Https"
        ],
        "patternsToMatch": [
          "/*"
        ],
        "forwardingProtocol": "MatchRequest",
        "linkToDefaultDomain": "Enabled",
        "httpsRedirect": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', format('fd-{0}', parameters('workloadName')), format('cdne-{0}', parameters('workloadName')))]",
        "[resourceId('Microsoft.Cdn/profiles/originGroups/origins', format('fd-{0}', parameters('workloadName')), 'default', 'app')]",
        "[resourceId('Microsoft.Cdn/profiles/originGroups', format('fd-{0}', parameters('workloadName')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Cdn/profiles/originGroups/origins",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}/{2}', format('fd-{0}', parameters('workloadName')), 'default', 'app')]",
      "properties": {
        "hostName": "[reference(resourceId('Microsoft.Web/sites', format('app-{0}', parameters('workloadName')))).defaultHostName]",
        "httpPort": 80,
        "httpsPort": 443,
        "weight": 1000,
        "originHostHeader": "[reference(resourceId('Microsoft.Web/sites', format('app-{0}', parameters('workloadName')))).defaultHostName]",
        "priority": 1,
        "sharedPrivateLinkResource": {
          "privateLink": {
            "id": "[resourceId('Microsoft.Web/sites', format('app-{0}', parameters('workloadName')))]"
          },
          "groupId": "sites",
          "privateLinkLocation": "[reference(resourceId('Microsoft.Web/sites', format('app-{0}', parameters('workloadName'))), '2022-03-01', 'full').location]",
          "requestMessage": "Private link request from AFD"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/originGroups', format('fd-{0}', parameters('workloadName')), 'default')]",
        "[resourceId('Microsoft.Web/sites', format('app-{0}', parameters('workloadName')))]"
      ]
    },
    {
      "type": "Microsoft.Cdn/profiles/afdEndpoints",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}', format('fd-{0}', parameters('workloadName')), format('cdne-{0}', parameters('workloadName')))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', format('fd-{0}', parameters('workloadName')))]"
      ]
    },
    {
      "type": "Microsoft.Cdn/profiles/originGroups",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}', format('fd-{0}', parameters('workloadName')), 'default')]",
      "properties": {
        "loadBalancingSettings": {
          "sampleSize": 4,
          "successfulSamplesRequired": 3
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', format('fd-{0}', parameters('workloadName')))]"
      ]
    },
    {
      "type": "Microsoft.Cdn/profiles/securityPolicies",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/{1}', format('fd-{0}', parameters('workloadName')), 'default')]",
      "properties": {
        "parameters": {
          "wafPolicy": {
            "id": "[resourceId('Microsoft.Network/FrontDoorWebApplicationFirewallPolicies', format('fdfp{0}', join(split(parameters('workloadName'), '-'), '')))]"
          },
          "associations": [
            {
              "domains": [
                {
                  "id": "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', format('fd-{0}', parameters('workloadName')), format('cdne-{0}', parameters('workloadName')))]"
                }
              ],
              "patternsToMatch": [
                "/*"
              ]
            }
          ],
          "type": "WebApplicationFirewall"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', format('fd-{0}', parameters('workloadName')), format('cdne-{0}', parameters('workloadName')))]",
        "[resourceId('Microsoft.Cdn/profiles', format('fd-{0}', parameters('workloadName')))]",
        "[resourceId('Microsoft.Network/FrontDoorWebApplicationFirewallPolicies', format('fdfp{0}', join(split(parameters('workloadName'), '-'), '')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-01-01",
      "name": "[format('vnet-{0}', parameters('workloadName'))]",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
      "location": "global",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "privatelink.documents.azure.com",
      "location": "global",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "privatelink.postgres.database.azure.com",
      "location": "global",
      "properties": {}
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[format('plan-{0}', parameters('workloadName'))]",
      "location": "[variables('resourceGroupLocation')]",
      "sku": {
        "name": "[parameters('appServicePlanSkuCode')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[format('app-{0}', parameters('workloadName'))]",
      "location": "[variables('resourceGroupLocation')]",
      "kind": "app,linux",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('plan-{0}', parameters('workloadName')))]",
        "reserved": true,
        "vnetRouteAllEnabled": true,
        "siteConfig": {
          "linuxFxVersion": "NODE|16-lts",
          "alwaysOn": true,
          "http20Enabled": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "ipSecurityRestrictions": [
            {
              "vnetSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'frontend')]"
            }
          ],
          "appSettings": [
            {
              "name": "STORAGE_ACCOUNT_CONNECTION_STRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', format('st{0}', join(split(parameters('workloadName'), '-'), '')), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('st{0}', join(split(parameters('workloadName'), '-'), ''))), '2022-05-01').keys[0].value, environment().suffixes.storage)]"
            },
            {
              "name": "COSMOS_DB_CONNECTION_STRING",
              "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', format('cosmos-{0}', parameters('workloadName'))), '2022-05-15').connectionStrings[0].connectionString]"
            },
            {
              "name": "POSTGRESQL_HOST",
              "value": "[format('{0}.postgres.database.azure.com', format('psql-{0}', parameters('workloadName')))]"
            },
            {
              "name": "POSTGRESQL_USER",
              "value": "[parameters('postgreSqlServerAdminLoginUserName')]"
            },
            {
              "name": "POSTGRESQL_KEY",
              "value": "[parameters('postgreSqlServerAdminLoginPassword')]"
            }
          ]
        },
        "httpsOnly": true,
        "publicNetworkAccess": "Disabled",
        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'outbound-webapp')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('plan-{0}', parameters('workloadName')))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', format('cosmos-{0}', parameters('workloadName')))]",
        "[resourceId('Microsoft.DBforPostgreSQL/servers', format('psql-{0}', parameters('workloadName')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', join(split(parameters('workloadName'), '-'), '')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'frontend')]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'outbound-webapp')]"
      ]
    },
    {
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "2021-06-01",
      "name": "[format('fd-{0}', parameters('workloadName'))]",
      "location": "global",
      "sku": {
        "name": "Premium_AzureFrontDoor"
      }
    },
    {
      "type": "Microsoft.Network/FrontDoorWebApplicationFirewallPolicies",
      "apiVersion": "2022-05-01",
      "name": "[format('fdfp{0}', join(split(parameters('workloadName'), '-'), ''))]",
      "location": "global",
      "sku": {
        "name": "Premium_AzureFrontDoor"
      },
      "properties": {
        "policySettings": {
          "mode": "Detection",
          "requestBodyCheck": "Enabled"
        },
        "managedRules": {
          "managedRuleSets": [
            {
              "ruleSetType": "Microsoft_DefaultRuleSet",
              "ruleSetVersion": "2.0",
              "ruleSetAction": "Block"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[format('st{0}', join(split(parameters('workloadName'), '-'), ''))]",
      "location": "[variables('resourceGroupLocation')]",
      "sku": {
        "name": "[parameters('storageAccountSkuCode')]"
      },
      "kind": "StorageV2",
      "properties": {
        "publicNetworkAccess": "Disabled",
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2022-01-01",
      "name": "[format('private-endpoint-{0}-storage', parameters('workloadName'))]",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "blob",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', join(split(parameters('workloadName'), '-'), '')))]",
              "groupIds": [
                "blob"
              ]
            }
          }
        ],
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'backend')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', join(split(parameters('workloadName'), '-'), '')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'backend')]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2022-05-15",
      "name": "[format('cosmos-{0}', parameters('workloadName'))]",
      "location": "[parameters('cosmosDbLocation')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "publicNetworkAccess": "Disabled",
        "enableFreeTier": "[parameters('cosmosDbEnableFreeTier')]",
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxStalenessPrefix": 100,
          "maxIntervalInSeconds": 5
        },
        "locations": [
          {
            "locationName": "[parameters('cosmosDbLocation')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2022-01-01",
      "name": "[format('private-endpoint-{0}-cosmos', parameters('workloadName'))]",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "cosmosdb",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.DocumentDB/databaseAccounts', format('cosmos-{0}', parameters('workloadName')))]",
              "groupIds": [
                "sql"
              ]
            }
          }
        ],
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'backend')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', format('cosmos-{0}', parameters('workloadName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'backend')]"
      ]
    },
    {
      "type": "Microsoft.DBforPostgreSQL/servers",
      "apiVersion": "2017-12-01",
      "name": "[format('psql-{0}', parameters('workloadName'))]",
      "location": "[variables('resourceGroupLocation')]",
      "sku": {
        "name": "GP_Gen5_4"
      },
      "properties": {
        "createMode": "Default",
        "version": "11",
        "minimalTlsVersion": "TLS1_2",
        "publicNetworkAccess": "Disabled",
        "administratorLogin": "[parameters('postgreSqlServerAdminLoginUserName')]",
        "administratorLoginPassword": "[parameters('postgreSqlServerAdminLoginPassword')]"
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2022-01-01",
      "name": "[format('private-endpoint-{0}-psql', parameters('workloadName'))]",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "postgresqlServer",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.DBforPostgreSQL/servers', format('psql-{0}', parameters('workloadName')))]",
              "groupIds": [
                "postgresqlServer"
              ]
            }
          }
        ],
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'backend')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/servers', format('psql-{0}', parameters('workloadName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'backend')]"
      ]
    }
  ]
}