{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.11.1.770",
      "templateHash": "3635477080332974752"
    }
  },
  "parameters": {
    "workloadName": {
      "type": "string",
      "metadata": {
        "description": "リソース名に付与する識別用の文字列（プロジェクト名など）を入力してください"
      }
    },
    "apiManagementSkuName": {
      "type": "string",
      "defaultValue": "Developer",
      "allowedValues": [
        "Basic",
        "Consumption",
        "Developer",
        "Isolated",
        "Premium",
        "Standard"
      ],
      "metadata": {
        "description": "Azure API Management の SKU 名を入力してください"
      }
    },
    "apiManagementOrganizationName": {
      "type": "string",
      "metadata": {
        "description": "Azure API Management を管理する組織名を入力してください"
      }
    },
    "apiManagementAdministratorEmail": {
      "type": "string",
      "metadata": {
        "description": "Azure API Management からの通知を受け取る管理者のメールアドレスを入力してください"
      }
    },
    "appServicePlanSkuCode": {
      "type": "string",
      "defaultValue": "P1v2",
      "allowedValues": [
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1v2",
        "P2v2",
        "P3v2",
        "P1v3",
        "P2v3",
        "P3v3"
      ],
      "metadata": {
        "description": "Azure App Service Plan のプランを選択してください"
      }
    },
    "storageAccountSkuCode": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GRS",
        "Standard_GZRS",
        "Standard_LRS",
        "Standard_RAGRS",
        "Standard_RAGZRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "Azure Storage Account の SKU を選択してください"
      }
    },
    "sqlDatabaseCollation": {
      "type": "string",
      "defaultValue": "Japanese_CI_AS",
      "metadata": {
        "description": "Azure SQL Database の照合順序を選択してください"
      }
    },
    "sqlDatabaseMaxSizeGigabytes": {
      "type": "int",
      "defaultValue": 32,
      "metadata": {
        "description": "Azure SQL Database の最大サイズを入力してください（GB）"
      }
    },
    "sqlServerAdminLoginUserName": {
      "type": "string",
      "metadata": {
        "description": "Azure SQL Server の管理者ユーザー名を入力してください"
      }
    },
    "sqlServerAdminLoginPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Azure SQL Server の管理者パスワードを入力してください"
      }
    }
  },
  "variables": {
    "resourceGroupLocation": "[resourceGroup().location]",
    "sqlDatabaseMaxSizeBytes": "[mul(mul(mul(parameters('sqlDatabaseMaxSizeGigabytes'), 1024), 1024), 1024)]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-01-01",
      "name": "[format('vnet-{0}', parameters('workloadName'))]",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-01-01",
      "name": "[format('{0}/{1}', format('vnet-{0}', parameters('workloadName')), 'frontend')]",
      "properties": {
        "addressPrefix": "10.0.0.0/24",
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-outbound-apim', parameters('workloadName')))]"
        },
        "serviceEndpoints": [
          {
            "service": "Microsoft.Web"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-{0}-outbound-apim', parameters('workloadName')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('workloadName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-01-01",
      "name": "[format('{0}/{1}', format('vnet-{0}', parameters('workloadName')), 'outbound-func')]",
      "properties": {
        "addressPrefix": "10.0.1.0/24",
        "delegations": [
          {
            "name": "delegation",
            "properties": {
              "serviceName": "Microsoft.Web/serverFarms"
            }
          }
        ],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled",
        "serviceEndpoints": [
          {
            "service": "Microsoft.Storage"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'frontend')]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', parameters('workloadName')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-01-01",
      "name": "[format('nsg-{0}-outbound-apim', parameters('workloadName'))]",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "securityRules": [
          {
            "name": "ManagementForPortalAndPowerShell",
            "properties": {
              "description": "Management endpoint for Azure portal and PowerShell",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "3443",
              "sourceAddressPrefix": "ApiManagement",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 110,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowTagHTTPSInbound",
            "properties": {
              "description": "Client communication to API Management",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "AllowTagHTTPSOutbound",
            "properties": {
              "description": "Dependency on Azure Storage",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "Storage",
              "access": "Allow",
              "priority": 110,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[format('plan-{0}', parameters('workloadName'))]",
      "location": "[variables('resourceGroupLocation')]",
      "sku": {
        "name": "[parameters('appServicePlanSkuCode')]"
      },
      "kind": "app",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[format('st{0}', uniqueString(resourceGroup().id, 'func'))]",
      "location": "[variables('resourceGroupLocation')]",
      "sku": {
        "name": "[parameters('storageAccountSkuCode')]"
      },
      "kind": "StorageV2",
      "properties": {
        "publicNetworkAccess": "Enabled",
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Deny",
          "virtualNetworkRules": [
            {
              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'outbound-func')]",
              "action": "Allow"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'outbound-func')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}', format('st{0}', uniqueString(resourceGroup().id, 'func')), 'default')]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', uniqueString(resourceGroup().id, 'func')))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}/{2}', format('st{0}', uniqueString(resourceGroup().id, 'func')), 'default', toLower(format('func-{0}', parameters('workloadName'))))]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', format('st{0}', uniqueString(resourceGroup().id, 'func')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[format('func-{0}', parameters('workloadName'))]",
      "location": "[variables('resourceGroupLocation')]",
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('plan-{0}', parameters('workloadName')))]",
        "httpsOnly": true,
        "vnetRouteAllEnabled": true,
        "vnetContentShareEnabled": true,
        "siteConfig": {
          "alwaysOn": true,
          "minTlsVersion": "1.2",
          "ftpsState": "Disabled",
          "http20Enabled": true,
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', format('st{0}', uniqueString(resourceGroup().id, 'func')), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('st{0}', uniqueString(resourceGroup().id, 'func'))), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', format('st{0}', uniqueString(resourceGroup().id, 'func')), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('st{0}', uniqueString(resourceGroup().id, 'func'))), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(format('func-{0}', parameters('workloadName')))]"
            },
            {
              "name": "WEBSITE_CONTENTOVERVNET",
              "value": "1"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~16"
            },
            {
              "name": "SQL_DATABASE_SERVER",
              "value": "[reference(resourceId('Microsoft.Sql/servers', format('sql-{0}', parameters('workloadName')))).fullyQualifiedDomainName]"
            },
            {
              "name": "SQL_DATABASE_USERNAME",
              "value": "[parameters('sqlServerAdminLoginUserName')]"
            },
            {
              "name": "SQL_DATABASE_PASSWORD",
              "value": "[parameters('sqlServerAdminLoginPassword')]"
            },
            {
              "name": "SQL_DATABASE_NAME",
              "value": "[format('sqldb-{0}', parameters('workloadName'))]"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "https://portal.azure.com"
            ]
          },
          "ipSecurityRestrictions": [
            {
              "vnetSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'frontend')]",
              "action": "Allow",
              "tag": "Default",
              "priority": 300
            }
          ]
        },
        "publicNetworkAccess": "Disabled",
        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'outbound-func')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('plan-{0}', parameters('workloadName')))]",
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', format('st{0}', uniqueString(resourceGroup().id, 'func')), 'default', toLower(format('func-{0}', parameters('workloadName'))))]",
        "[resourceId('Microsoft.Sql/servers', format('sql-{0}', parameters('workloadName')))]",
        "[resourceId('Microsoft.Sql/servers/databases', format('sql-{0}', parameters('workloadName')), format('sqldb-{0}', parameters('workloadName')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', uniqueString(resourceGroup().id, 'func')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'frontend')]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'outbound-func')]"
      ]
    },
    {
      "type": "Microsoft.ApiManagement/service",
      "apiVersion": "2021-08-01",
      "name": "[format('apim-{0}', parameters('workloadName'))]",
      "location": "[variables('resourceGroupLocation')]",
      "sku": {
        "name": "[parameters('apiManagementSkuName')]",
        "capacity": "[if(equals(parameters('apiManagementSkuName'), 'Consumption'), 0, 1)]"
      },
      "properties": {
        "publisherName": "[parameters('apiManagementOrganizationName')]",
        "publisherEmail": "[parameters('apiManagementAdministratorEmail')]",
        "virtualNetworkConfiguration": {
          "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'frontend')]"
        },
        "virtualNetworkType": "External",
        "publicNetworkAccess": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-{0}', parameters('workloadName')), 'frontend')]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2021-11-01",
      "name": "[format('sql-{0}', parameters('workloadName'))]",
      "location": "[variables('resourceGroupLocation')]",
      "properties": {
        "administratorLogin": "[parameters('sqlServerAdminLoginUserName')]",
        "administratorLoginPassword": "[parameters('sqlServerAdminLoginPassword')]",
        "version": "12.0",
        "minimalTlsVersion": "1.2",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', format('sql-{0}', parameters('workloadName')), format('sqldb-{0}', parameters('workloadName')))]",
      "location": "[variables('resourceGroupLocation')]",
      "sku": {
        "name": "GP_S_Gen5",
        "tier": "GeneralPurpose",
        "family": "Gen5",
        "capacity": 1
      },
      "properties": {
        "collation": "[parameters('sqlDatabaseCollation')]",
        "maxSizeBytes": "[variables('sqlDatabaseMaxSizeBytes')]",
        "createMode": "Default"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', format('sql-{0}', parameters('workloadName')))]"
      ]
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', format('sql-{0}', parameters('workloadName')), 'AllowAllWindowsAzureIps')]",
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', format('sql-{0}', parameters('workloadName')))]"
      ]
    }
  ]
}